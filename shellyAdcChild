/*

 */

metadata
{
    definition(name: "Shelly ADC Child", namespace: "tomw", author: "tomw", importUrl: "")
    {
        capability "Refresh"
        capability "VoltageMeasurement"
    }
}

preferences
{
    section
    {
        input "adcNum", "text", title: "ADC number of this child", required: true
        input name: "voltageOffset", type: "number", title: "Voltage Offset", description: "This setting compensates for an inaccurate voltage sensor.", defaultValue: "-0.4"
    }
}

def setupDetails(details)
{
    device.updateSetting("adcNum", details.adcNum)
}

def setCallbackURLs(URL)
{
    getParent()?.getCommon()?.writeSettingAction("adc_over_url", adcNum.toInteger(), URL, true)
    getParent()?.getCommon()?.writeSettingAction("adc_under_url", adcNum.toInteger(), URL, true)
}

def refresh()
{
    def adc = readADC()
    if(adc)
    {
        sendEvent(name: "voltage", value: adc.voltage + voltageOffset)
    }
}

def readADC()
{
    return getParent()?.getCommon()?.readStatus(false)?.adcs?.getAt(adcNum.toInteger())
}
